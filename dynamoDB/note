row - item
column - attribute

Capacity Units
    RCU (Read Capacity Unit)    - 1RCU 4kb/sec
    WCU (Write Capacity Unit)   - 1WCU 1kb/sec

Partitions
    Partitions manged internally by DynamoDB.
    A table can have multiple partitions.
    Number of table partitions depend on its size and provisioned capacity.
    1 partition = 10GB of data.
    1 partition = 1000 WCUs or 3000 RCUs

    Example:
        provisioned capacity: 500 RCUs and 500 WCUs
        P = 500/3000 + 500/1000;
        p = 0.67 ~ 1 partition

        provisioned capacity: 1000 RCUs and 1000 WCUs
        P = 1000/3000 + 1000/1000;
        p = 1.33 ~ 2 partitions
        
// https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/SQLtoNoSQL.Indexes.html
Indexes
    Mandatory Primary Key - either simple or composite.
    Simple Primary Key - only partition or hash key.
    Composite Primary Key - Partition Key + Sort or Range key.

Local Secondary Indexes
    You can create 5 local secondary indexes.
    Use same partition key but diferent sort key.
    Must be created when you create your table.
    
Global Secondary Index
    You can create 5 global secondary indexes.
    Use diferent partition and sort keys.
    Can be created any time.
    Not suported strongly consistent read, only eventualy.
    Can set RCUs and WCUs separatly from capacity uits of the base table.

CLI
    // https://docs.aws.amazon.com/cli/latest/reference/dynamodb/index.html
    
    List tables - 
        aws dynamodb list-tables

    Get table meta-data
        aws dynamodb describe-table --table-name <table-name>

    Create table
        aws dynamodb create-table --table-name testTable --attribute-definitions AttributeName=user_id,AttributeType=S AttributeName=timestamp,AttributeType=N --key-schema AttributeName=user_id,KeyType=HASH AttributeName=timestamp,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1

    Delete table
        aws dynamodb delete-table --table-name testTable

    Put/Replace item in the table
        item.json
            {
                "user_id":{"S":"1234abcd"},
                "timestamp":{"N":"1525013000"},
                "content":{"S":"Hello World!"},
                "title":{"S":"My Title"}
            }

        aws dynamodb put-item --table-name <table-name> --item file://item.json

    Update attributes
        key.json
            {
                "user_id":{"S":"1234abcd"},
                "timestamp":{"N":"1525013000"}
            }

        attribute-names.json
            {
                "#t":"title"
            }

        attribute-values.json
            {
                ":t":{"S":"My updated title"}
            }

        aws dynamodb update-item --table-name testTable --key file://key.json /
        --update-expression "SET #t = :t" /
        expression-attribute-names file://attribute-names.json /
        expression-attribute-values file://attribute-values.json

    Update attributes
        key.json
            {
                "user_id":{"S":"1234abcd"},
                "timestamp":{"N":"1525013000"}
            }

        aws dynamodb delete-item --table-name testTable --key file://key.json

    Write and delete multiple items
        // items.json
        {
            "testTable": [
                {
                    "PutRequest": {
                        "Item": {
                             "user_id":{"S":"1234abcd"},
                            "timestamp":{"N":"1525013000"},
                            "content":{"S":"Hello World!"},
                            "title":{"S":"My Title"}
                        }
                    }
                },
                                {
                    "PutRequest": {
                        "Item": {
                            "user_id":{"S":"2234abcd"},
                            "timestamp":{"N":"1525013001"},
                            "content":{"S":"Some Content"},
                            "title":{"S":"My Title1"}
                        }
                    }
                },
                {
                    "DeleteRequest": {
                        "Key": {
                            "user_id":{"S":"2wsxcder"},
                            "timestamp":{"N":"156013001"},
                        }
                    }
                }
            ]
        }

        aws dynamodb batch-write-item --request-tems file://items.json



    